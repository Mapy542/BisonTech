{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_control_forever\" id=\"tq-0/_E)10ztp0=DB^k-\"><statement name=\"SUBSTACK\"><block type=\"v5_control_if_then_else\" id=\"[`Y8U;nsQZ{`$YHx0aO0\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"HAA@1D@8h{ifJQ.%b*M~\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonUp</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_sensing_set_digital_out\" id=\"|P{dJFw8%kWG%-V4^VEY\"><field name=\"DIGITALOUT\">DigitalOutC</field><field name=\"STATE\">high</field></block></statement><statement name=\"SUBSTACK2\"><block type=\"v5_sensing_set_digital_out\" id=\"n-MLyc$i.ZJ.o8(8=]@H\"><field name=\"DIGITALOUT\">DigitalOutC</field><field name=\"STATE\">low</field></block></statement></block></statement></block></next></block></xml>","rconfig":[{"port":[3],"name":"DigitalOutC","customName":false,"deviceType":"DigitalOut","setting":{},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"}}],"slot":5,"platform":"V5","sdkVersion":"20210708.10.00.00","appVersion":"2.0.8","fileFormat":"1.0.0","icon":"","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ndigital_out DigitalOutC = digital_out(Brain.ThreeWirePort.C);\ncontroller Controller1 = controller(primary);\n\n\n\n// Generated code.\n\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  while (true) {\n    if (Controller1.ButtonUp.pressing()) {\n      DigitalOutC.set(true);\n    }\n    else {\n      DigitalOutC.set(false);\n    }\n  wait(5, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}"}